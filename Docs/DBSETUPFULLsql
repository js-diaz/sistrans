--BORRA TODO EN LA BD
    --BORRA TABLAS MUCHOS A MUCHOS
DROP TABLE PREFERENCIACATEGORIA;
DROP TABLE PREFERENCIAZONA;
DROP TABLE CONDICIONZONA;
DROP TABLE CATEGORIA_RESTAURANTE;
DROP TABLE INFO_ING_REST;
DROP TABLE CATEGORIA_PRODUCTO;
DROP TABLE CATEGORIA_MENU;
DROP TABLE PERTENECE_A_MENU;
DROP TABLE PERTENECE_A_PLATO;
DROP TABLE INFO_PROD_REST;
DROP TABLE PEDIDO_MENU;
DROP TABLE PEDIDO_PROD;
    --BORRA ENTIDADES INDEPENDIENTES
DROP TABLE CONDICIONTECNICA;
DROP TABLE CATEGORIA;
DROP TABLE CUENTA;
DROP TABLE PREFERENCIA;
DROP TABLE RESERVA;
DROP TABLE RESTAURANTE;
DROP TABLE MENU;
DROP TABLE PRODUCTO;
DROP TABLE INGREDIENTE;
DROP TABLE USUARIO;
DROP TABLE TIPOSDEPLATO;
DROP TABLE ROL;
DROP TABLE ZONA;



CREATE TABLE ROL (
 NOMBRE VARCHAR(20),
 CONSTRAINT PK_ROL PRIMARY KEY (NOMBRE),
 CONSTRAINT CK_ROL CHECK (NOMBRE IN ('CLIENTE','OPERADOR','ORGANIZADORES','LOCAL','PROVEEDOR'))
 );
 
 CREATE TABLE TIPOSDEPLATO(
NOMBRE VARCHAR(20),
CONSTRAINT PK_TIPOSP PRIMARY KEY (NOMBRE),
CONSTRAINT CK_TIPOSP CHECK (NOMBRE IN ('ENTRADA','PLATO FUERTE','POSTRE','BEBIDA','ACOMPAÃ‘AMIENTO'))
);
 
 ALTER TABLE TIPOSDEPLATO
 DROP CONSTRAINT CK_TIPOSP;
 ALTER TABLE TIPOSDEPLATO
 ADD CONSTRAINT CK_TIPOSP CHECK (NOMBRE IN ('ENTRADA','PLATO FUERTE','POSTRE','BEBIDA','ACOMPANAMIENTO'));
 
CREATE TABLE INGREDIENTE(
ID INTEGER,
NOMBRE VARCHAR(50) NOT NULL,
DESCRIPCION VARCHAR (500),
TRADUCCION VARCHAR (500),
CONSTRAINT PK_ING PRIMARY KEY (ID),
CONSTRAINT CK_DESCING CHECK ((DESCRIPCION IS NULL AND TRADUCCION IS NULL) OR (DESCRIPCION IS NOT NULL AND TRADUCCION IS NOT NULL)),
CONSTRAINT CK_DESCING2 CHECK ((DESCRIPCION LIKE 'null' AND TRADUCCION LIKE 'null') OR (DESCRIPCION  NOT LIKE 'null' AND TRADUCCION  NOT LIKE 'null')),
CONSTRAINT CK_DESCING3 CHECK (((DESCRIPCION LIKE '' AND TRADUCCION LIKE '') OR (DESCRIPCION  NOT LIKE '' AND TRADUCCION  NOT LIKE '')))
);

 CREATE TABLE CATEGORIA(
 NOMBRE VARCHAR(20),
 CONSTRAINT PK_CATEGORIA PRIMARY KEY (NOMBRE)
 );
 
  
 CREATE TABLE CONDICIONTECNICA (
 NOMBRE VARCHAR(20),
 CONSTRAINT PK_CONDICIONTECNICA PRIMARY KEY (NOMBRE));
 
 CREATE TABLE PRODUCTO(
ID INTEGER,
NOMBRE VARCHAR(50) NOT NULL,
TIPO VARCHAR(20) NOT NULL,
PERSONALIZABLE CHAR(1) NOT NULL,
PRECIO NUMBER NOT NULL,
TRADUCCION VARCHAR(500),
DESCRIPCION VARCHAR(500),
COSTOPRODUCCION NUMBER NOT NULL,
TIEMPO NUMBER,
CONSTRAINT PK_PRODUCTO PRIMARY KEY (ID),
CONSTRAINT FK_TIPO FOREIGN KEY (TIPO) REFERENCES TIPOS_DE_PLATO (NOMBRE),
CONSTRAINT CK_NUMEROS CHECK (PRECIO >=0 AND COSTOPRODUCCION >=0 AND TIEMPO >=0),
CONSTRAINT CK_DESCRIPCION CHECK ((DESCRIPCION IS NULL AND TRADUCCION IS NULL) OR (DESCRIPCION IS NOT NULL AND TRADUCCION IS NOT NULL)),
CONSTRAINT CK_PERSONALIZABLE CHECK (PERSONALIZABLE IN ('0','1')),
CONSTRAINT CK_DESCRIPCION2 CHECK ((DESCRIPCION LIKE 'null' AND TRADUCCION LIKE 'null') OR (DESCRIPCION  NOT LIKE 'null' AND TRADUCCION  NOT LIKE 'null')),
CONSTRAINT CK_DESCRIPCION3 CHECK (((DESCRIPCION LIKE '' AND TRADUCCION LIKE '') OR (DESCRIPCION  NOT LIKE '' AND TRADUCCION  NOT LIKE '')))

);
 
 CREATE TABLE PERTENECE_A_PLATO
(
    ID_PLATO INTEGER NOT NULL,
    ID_INGREDIENTE INTEGER NOT NULL,
    PRIMARY KEY (ID_PLATO, ID_INGREDIENTE),
    FOREIGN KEY (ID_PLATO) REFERENCES PRODUCTO(ID),
    FOREIGN KEY (ID_INGREDIENTE) REFERENCES INGREDIENTE(ID)
);


 CREATE TABLE USUARIO (
 ID INTEGER,
 CORREO VARCHAR(100),
 NOMBRE VARCHAR (50) NOT NULL,
 ROL VARCHAR (20) NOT NULL,
 CONSTRAINT FK_ROL FOREIGN KEY (ROL) REFERENCES ROL(NOMBRE),
 CONSTRAINT PK_USUARIO PRIMARY KEY(ID),
 ADD CONSTRAINT CK_ID CHECK (ID>=0));
 
 
 CREATE TABLE ZONA (
  NOMBRE VARCHAR(20),
 CAPACIDAD INTEGER NOT NULL,
 INGRESOESPECIAL CHAR(1) NOT NULL,
 ABIERTAACTUALMENTE CHAR(1) NOT NULL,
 CAPACIDADOCUPADA INTEGER NOT NULL,
 CONSTRAINT PK_ZONA PRIMARY KEY (NOMBRE),
 CONSTRAINT CK_CAPACIDAD CHECK (CAPACIDAD>=0),
 CONSTRAINT CK_OCUPADA CHECK (CAPACIDADOCUPADA>=0),
 CONSTRAINT CK_CAPACIDADES CHECK (CAPACIDADOCUPADA<=CAPACIDAD),
 CONSTRAINT CK_ABIERTA CHECK (ABIERTAACTUALMENTE IN ('0','1')),
 CONSTRAINT CK_INGRESOESPECIAL CHECK (INGRESOESPECIAL IN ('0','1'))
);

CREATE TABLE RESTAURANTE
(
    NOMBRE VARCHAR(20) NOT NULL,
    PAG_WEB VARCHAR(40),
    ID_REPRESENTANTE INTEGER NOT NULL,
    NOMBRE_ZONA VARCHAR(20) NOT NULL,
    PRIMARY KEY (NOMBRE),
    FOREIGN KEY (ID_REPRESENTANTE) REFERENCES USUARIO(ID),
    FOREIGN KEY (NOMBRE_ZONA) REFERENCES ZONA(NOMBRE)
);
 
 CREATE TABLE CONDICIONZONA(
 CONDICIONTECNICANOMBRE VARCHAR(20),
 ZONANOMBRE VARCHAR (20),
 CONSTRAINT FK_ZONA FOREIGN KEY (ZONANOMBRE) REFERENCES ZONA (NOMBRE),
 CONSTRAINT PK_CONDICIONZONA PRIMARY KEY (CONDICIONTECNICANOMBRE,ZONANOMBRE),
 CONSTRAINT FK_CONDICION FOREIGN KEY (CONDICIONTECNICANOMBRE) REFERENCES CONDICIONTECNICA(NOMBRE)
 );

 
 CREATE TABLE PREFERENCIA(
 IDUSUARIO INTEGER,
 PRECIOINICIAL NUMBER,
 PRECIOFINAL NUMBER,
 CONSTRAINT FK_USUARIO FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(ID),
 CONSTRAINT PK_PREFERENCIA PRIMARY KEY (IDUSUARIO),
 CONSTRAINT CK_INICIALPOSITIVO CHECK (PRECIOINICIAL IS NULL OR PRECIOINICIAL>=0),
 CONSTRAINT CK_FINALPOSITIVO CHECK (PRECIOFINAL IS NULL OR PRECIOFINAL>=0),
 CONSTRAINT CK_RELACIONPRECIOS CHECK ((PRECIOINICIAL IS NULL AND PRECIOFINAL IS NULL)OR(PRECIOINICIAL IS NOT NULL AND PRECIOFINAL IS NOT NULL AND PRECIOINICIAL<=PRECIOFINAL))
 );
 
CREATE TABLE INFO_PROD_REST
(
    ID_PRODUCTO INTEGER NOT NULL,
    NOMBRE_RESTAURANTE VARCHAR(20) NOT NULL,
    PRECIO NUMBER NOT NULL,
    COSTO NUMBER,
    DISPONIBILIDAD INTEGER,
    FECHA_INICIO DATE,
    FECHA_FIN DATE,
    PRIMARY KEY(ID_PRODUCTO, NOMBRE_RESTAURANTE),
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID),
    FOREIGN KEY (NOMBRE_RESTAURANTE) REFERENCES RESTAURANTE(NOMBRE)
);

CREATE TABLE INFO_ING_REST
(
    ID_INGREDIENTE INTEGER NOT NULL,
    NOMBRE_RESTAURANTE VARCHAR(20) NOT NULL,
    PRECIO_ADICION NUMBER,
    PRECIO_SUSTITUTO NUMBER,
    PRIMARY KEY (ID_INGREDIENTE, NOMBRE_RESTAURANTE),
    FOREIGN KEY (ID_INGREDIENTE) REFERENCES INGREDIENTE(ID),
    FOREIGN KEY( NOMBRE_RESTAURANTE) REFERENCES RESTAURANTE(NOMBRE)
);

CREATE TABLE MENU
(
    NOMBRE VARCHAR(20) NOT NULL,
    NOMBRE_RESTAURANTE VARCHAR(20) NOT NULL,
    PRECIO NUMBER NOT NULL,
    COSTO NUMBER,
    PRIMARY KEY(NOMBRE, NOMBRE_RESTAURANTE),
    FOREIGN KEY (NOMBRE_RESTAURANTE) REFERENCES RESTAURANTE(NOMBRE)
);

CREATE TABLE PERTENECE_A_MENU
(
    NOMBRE_MENU VARCHAR(20) NOT NULL,
    ID_PLATO INTEGER NOT NULL,
    NOMBRE_RESTAURANTE VARCHAR(20) NOT NULL,
    PRIMARY KEY (NOMBRE_MENU, ID_PLATO, NOMBRE_RESTAURANTE),
    FOREIGN KEY (NOMBRE_MENU, NOMBRE_RESTAURANTE) REFERENCES MENU(NOMBRE, NOMBRE_RESTAURANTE),
    FOREIGN KEY (ID_PLATO, NOMBRE_RESTAURANTE) REFERENCES INFO_PROD_REST(ID_PRODUCTO, NOMBRE_RESTAURANTE)
);

CREATE TABLE CATEGORIA_MENU
(
    NOMBRE_CATEGORIA VARCHAR(20) NOT NULL,
    NOMBRE_MENU VARCHAR(20) NOT NULL,
    NOMBRE_RESTAURANTE VARCHAR(20) NOT NULL,
    PRIMARY KEY (NOMBRE_CATEGORIA, NOMBRE_MENU, NOMBRE_RESTAURANTE),
    FOREIGN KEY (NOMBRE_CATEGORIA) REFERENCES CATEGORIA(NOMBRE),
    FOREIGN KEY (NOMBRE_MENU, NOMBRE_RESTAURANTE) REFERENCES MENU(NOMBRE, NOMBRE_RESTAURANTE)
);

CREATE TABLE CATEGORIA_RESTAURANTE
(
    NOMBRE_CATEGORIA VARCHAR(20) NOT NULL,
    NOMBRE_RESTAURANTE VARCHAR(20) NOT NULL,
    PRIMARY KEY (NOMBRE_CATEGORIA, NOMBRE_RESTAURANTE),
    FOREIGN KEY (NOMBRE_CATEGORIA) REFERENCES CATEGORIA(NOMBRE),
    FOREIGN KEY (NOMBRE_RESTAURANTE) REFERENCES RESTAURANTE(NOMBRE)
);

CREATE TABLE CATEGORIA_PRODUCTO
(
    NOMBRE_CATEGORIA VARCHAR(20) NOT NULL,
    ID_PRODUCTO INTEGER NOT NULL,
    PRIMARY KEY (NOMBRE_CATEGORIA, ID_PRODUCTO),
    FOREIGN KEY (NOMBRE_CATEGORIA) REFERENCES CATEGORIA(NOMBRE),
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID)
);

CREATE TABLE CUENTA(
VALOR NUMBER NOT NULL,
NUMEROCUENTA VARCHAR (20) NOT NULL,
FECHA DATE NOT NULL,
IDUSUARIO INTEGER ,
CONSTRAINT FK_IDUSUARIOCUENTA FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(ID),
CONSTRAINT PK_CUENTA PRIMARY KEY (NUMEROCUENTA),
CONSTRAINT CK_NUMCUENTA CHECK (REGEXP_LIKE(NUMEROCUENTA, '^[[:digit:]]+$')));

 CREATE TABLE PEDIDO_MENU
(
    NUMERO_CUENTA VARCHAR(20) NOT NULL,
    NOMBRE_MENU VARCHAR(20) NOT NULL,
    NOMBRE_RESTAURANTE VARCHAR(20) NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    PRIMARY KEY (NUMERO_CUENTA, NOMBRE_MENU, NOMBRE_RESTAURANTE),
    FOREIGN KEY (NUMERO_CUENTA) REFERENCES CUENTA(NUMEROCUENTA),
    FOREIGN KEY (NOMBRE_MENU, NOMBRE_RESTAURANTE) REFERENCES MENU(NOMBRE, NOMBRE_RESTAURANTE)
);

CREATE TABLE PEDIDO_PROD
(
    NUMERO_CUENTA VARCHAR(20) NOT NULL,
    ID_PRODUCTO INTEGER NOT NULL,
    NOMBRE_RESTAURANTE VARCHAR(20) NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    PRIMARY KEY (NUMERO_CUENTA, ID_PRODUCTO, NOMBRE_RESTAURANTE),
    FOREIGN KEY (NUMERO_CUENTA) REFERENCES CUENTA(NUMEROCUENTA),
    FOREIGN KEY (ID_PRODUCTO, NOMBRE_RESTAURANTE) REFERENCES INFO_PROD_REST(ID_PRODUCTO, NOMBRE_RESTAURANTE)
);




CREATE TABLE RESERVA
(
    FECHA DATE NOT NULL,
    ID_RESERVADOR INTEGER NOT NULL,
    NUM_PERSONAS INTEGER NOT NULL,
    NOMBRE_ZONA VARCHAR(20),
    NOMBRE_MENU VARCHAR(20),
    NOMBRE_RESTAURANTE VARCHAR(20),
    PRIMARY KEY (FECHA, ID_RESERVADOR),
    FOREIGN KEY (ID_RESERVADOR) REFERENCES USUARIO(ID),
    FOREIGN KEY (NOMBRE_ZONA) REFERENCES ZONA(NOMBRE),
    FOREIGN KEY (NOMBRE_MENU, NOMBRE_RESTAURANTE) REFERENCES MENU(NOMBRE, NOMBRE_RESTAURANTE)
);
 
 CREATE TABLE PREFERENCIAZONA(
 IDUSUARIO INTEGER,
 NOMBREZONA VARCHAR(20),
 CONSTRAINT FK_USUARIOPREF FOREIGN KEY (IDUSUARIO) REFERENCES PREFERENCIA(IDUSUARIO),
 CONSTRAINT FK_ZONAPREF FOREIGN KEY (NOMBREZONA) REFERENCES ZONA(NOMBRE),
 CONSTRAINT PK_PREFERENCIAZONA PRIMARY KEY (IDUSUARIO,NOMBREZONA)
 );
  

 
 CREATE TABLE PREFERENCIACATEGORIA(
 IDUSUARIO INTEGER,
 NOMBRECATEGORIA VARCHAR(20),
 CONSTRAINT FK_IDPREFERENCIA FOREIGN KEY (IDUSUARIO) REFERENCES PREFERENCIA(IDUSUARIO),
 CONSTRAINT FK_CATEGORIAPREFERENCIA FOREIGN KEY (NOMBRECATEGORIA) REFERENCES CATEGORIA(NOMBRE),
 CONSTRAINT PK_PREFERENCIACATEGORIA PRIMARY KEY (IDUSUARIO, NOMBRECATEGORIA));
 




